                                       _                ___   
                   _ __ ___   ___   __| | ___  ___     ( _ )  
                  | '_ ` _ \ / _ \ / _` |/ _ \/ __|    / _ \/\
                  | | | | | | (_) | (_| |  __/\__ \   | (_>  <
                  |_| |_| |_|\___/ \__,_|\___||___/    \___/\/
                                                              
          __                  _   _                   _ _ _            
         / _| ___  _ __   ___| |_(_) ___  _ __   __ _| (_) |_ ___  ___ 
        | |_ / _ \| '_ \ / __| __| |/ _ \| '_ \ / _` | | | __/ _ \/ __|
        |  _| (_) | | | | (__| |_| | (_) | | | | (_| | | | ||  __/\__ \
        |_|  \___/|_| |_|\___|\__|_|\___/|_| |_|\__,_|_|_|\__\___||___/
                                                                       
zo = ouvrir le fold marker sous le curseur
zc = fermer le fold marker sous le curseur
zR = ouvrir tous les fold markers

{{{ ===== mode normal ===== :
- deplacement du curseur :
  jklh           : haut Bas droite gauche
  wW eE BB ^$    : deplacement dans la ligne
  () {} %        : deBut / fin de paragraphe
  gg [[]] G      : deBut / fin de document
  u C-r          : undo redo
  fa             : "a" suivant
  Fa             : "a" precedent
  ;              : rejoue le 'f' ou 'F' precedent
- informations diverses :
  K              : man page (Bash)
- modification / : copie de lignes ou de caracteres :
  x              : suppression de 1 caractere sous le curseur (ou sous la zone visuelle selectionnee)
  u              : lowercase de "..."
  U              : uppercase de "..."
  ~              : change case de "..."
  dd 7dd d7w x   : suppression (ligne, 7 lignes, 7 mots, 1 caractere)
  yy 8yy yw y$   : copie (ligne, 8 lignes, un mot, jusqu'a la fin de la ligne)
  p 10p 2P       : collage (une fois, 10 fois, 2 fois avant la position courante)
  J              : jointure de 2 lignes
  rj             : remplace la lettre courante sous le curseur par la lettre 'j'
  c$             : change => supprime jusqu'a la fin de la ligne ($) et rentre en mode insertion
  .              : rejoue l'action precedente (p dd r c ...)
- Buffer :
  "ayy           : (copie dans 'a' : commence par ", 'a' est le nom du Buffer, "yy" pour yank line)
  "ap            : (colle 'a' : commence par ", 'a' est le nom du Buffer, "p" pour paste)
- folding / unfolding :
  zj zk          : deplacement vertical de Bloc en Bloc
  zo             : ouvre un Bloc sous le curseur (open)
  zc             : ferme un Bloc sous le curseur (close)
  zR             : ouvre tous les Blocs
  zM             : ferme tous les Blocs
- navigation (netrw) :
  mf             : mark file under cursor
  md             : diff files marked
  %              : create new file
  c              : make Browsing directory the current directory
  R              : rename file under the cursor
  D              : new directory
  v              : split file or dir under cursor verticaly
  C-l            : refresh file list in current directory
- multifenetrage :
  <C-w>f         : ouvre le fichier ou le reperoire sous le curseur (split)
  <C-w>h         : next left window
  <C-w>j         : next Bottom window
  <C-w>k         : next top window
  <C-w>l         : next right window
  <C-w>H         : next left window
  <C-w>J         : next Bottom window
  <C-w>K         : next top window
  <C-w>L         : next right window
  <C-w>n         : new horizontal split (editing a new empty Buffer)
  <C-w>s         : split window horizontally (editing current Buffer)
  <C-w>v         : vsplit window vertically (editing current Buffer)
  <C-w>c         : close window
  <C-w>o         : close all windows, leaving :only the current window open
  <C-w>w         : go to next window
  <C-w>p         : go to previous window
- vimdiff :
  ]c             : next difference
  [c             : previous difference
  do             : diff oBtain
  dp             : diff put
  zo             : open folded text
  zc             : close folded text
}}}

{{{ ===== mode insertion ===== :
- passer en mode insertion depuis le mode normal
  i   : avant la lettre courante
  a   : apres la lettre courante
  I   : deBut de ligne
  A   : fin de ligne
  o   : nouvelle ligne apres la courante
  O   : nouvelle ligne avant la courante
  r   : remplace la lettre courante et retourne en mode normal
- faire une suppression avant l'insertion
  cc  : change la ligne en cours
  cw  : change le mot en cours
  c3w : change les 3 mots en cours
  cfj : change jusqu'a la lettre 'j'
  rl  : remplace la lettre courante par la lettre l et retourne en mode normal
}}}

{{{ ===== mode ligne de commande ===== :
  :                 : commande
  :gv               : formatage (GUI only)
  :set paste        :
  :set nopaste      :
  :s/a/B/           : modifie 1 fois "a" en "B" sur la ligne courante
  :%s/a/B/          : modifie 1 fois "a" en "B" sur toutes les lignes du document
  :%s/a/B/g         : modifie tous les "a" en "B" sur tout le document
  :%s/\(^[[:Blank:]]*\)/\1---/g  :
    ajoute "---" apres tout espace trouve 0 ou n fois au deBut des lignes du document
  :%s/\(^[[:Blank:]]\{1,}\)/\1---/g  :
    ajoute "---" apres tout espace trouve au moins 1 fois au deBut des lignes du document
  :g/^$/d           : supprime toutes les lignes vierges
  :g!/^$/d          : supprime toutes les lignes non vierges
  :help version-7.2 :
  :help netrw       :
  :w                : ecrire le fichier courant
  :q!               : quitter sans enregistrer
  :wq! (ou :x)      : enregistrer et quitter (! sert a forcer l'action ex :w!)
  :w! Buff.txt      : ecrit le fichier courant dans Buff.txt
  :.w! Buff.txt     : ecrit la ligne courante dans Buff.txt
  :'<,'>w! Buff.txt : ecrit le fichier courante dans Buff.txt
  :r Buff.txt       : lit le fichier Buff.txt a la position courante
  C-f               : permet d'editer l'historique des commandes ou des recherches en mode normal ...!
- navigation (netrw) :
  :split            : ouvre le fichier courant en mode horizontal
  :vert split       : ouvre le fichier courant en mode vertical
  :split ./         : ouvre le repertoire dans lequel vim a ete lance en mode horizontal
  :vert split /path/to/filename :
    ouvre un fichier mode vertical (un chemin relatif se Base sur le path dans lequel est lance vim)
    voir "c" pour changer le path courant en mode netrw (Hex / C-w f)
  :Ex               : ouvre le repertoire du fichier courant a la place du fichier courant
  :Hex              : ouvre le repertoire du fichier courant en split horizontal
  :Vex              : ouvre le repertoire du fichier courant en split Vertical
  :diffupdate       : re-scan the files for differences
  :diffoff          : stop diff Between splited files
}}}

{{{ ===== mode visuel ===== :
  v   : surlignage normal
  V   : surlignage ligne a ligne
  C-v : surlignage en Bloc
    apres la selection en mode visuel
    on peut passer en mode commande et
    faire une action sur la selection :
  :'<,'>s/lig/LIG/ (voir mode commande)
}}}

{{{ ===== mode selection ===== :
  mode visuel + modification (r ou c par ex)
}}}

{{{ ===== mode Ex ===== :
  Q           : entre en mode ex
   taper la ligne de commande a executer
  visual (vi) : retourne vers vi en mode normal et execute les commandes
}}}
